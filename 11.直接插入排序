···直接插入排序

假设在排序过程中，待排序列：L[1...n] 在某次排序中的某一时刻状态如下：
  ---------------------------------------------------
  | 有序序列 L[1...i-1] | L(i) | 无序序列 L[i+1...n]  |
  ---------------------------------------------------

要将元素 L（i）插入到有序的子序列 L[1...i-1] 中。需要执行以下操作 （注：L[] 表示一个表，L()表示一个元素）：
  
  1.查找出 L(i)在 L[1...i-1] 中的插入位置k。
  1.查找出 L[k...i-1]中的所有元素全部后移一个位置。
  3.将 L(i) 复制到 L(k)。

就地排序：空间复杂度 O（1），时间复杂度O（n^2）,适用于顺序存储和链式存储的线性表。
        

C++语言

#include <bits/stdc++.h>

using namespace std;

void InsertSort(int *a, int n){
    int i,j,k;
    for(i = 1; i < n; i++){
        for(j = i - 1; j >= 0; j--){
            if(a[j] < a[i]) break;
        }
        if(j != i - 1){
            int temp = a[i];
            for(k = i - 1; k > j; k--){
                a[k + 1] = a[k];
            }
            a[k + 1] = temp;
        }


    }

}

int main()
{
    int a[] = {1,2,8,5,6,7,3};
    int len = (sizeof(a))/(sizeof(a[0]));
    for(int i = 0; i < len; i++){
        printf(" %d",a[i]);
    }
    cout << endl;

    InsertSort(a,len);
    for(int i = 0; i < 7; i++){
        printf(" %d",a[i]);
    }
    return 0;
}





