假设一个探险家被困在了地底的迷宫之中，要从当前位置开始找到一条通往迷宫出口的路径。迷宫可以用一个二维矩阵组成，有的部分是墙，有的部分是
路。迷宫之中有的路上还有门，每扇门都在迷宫的某个地方有与之匹配的钥匙，只有先拿到钥匙才能打开门。请设计一-个算法，帮助探险家找到脱困的
最短路径。如前所述，迷宫是通过一个二维矩阵表示的，每个元素的值的含义如下0-墙，1-路, 2-探险家的起始位置，3-迷宫的出口，大写字母门，
小写字母-对应大写字母所代表的门的钥匙。


输入描述: 
迷宫的地图，用二维矩阵表示。第一行是表示矩阵的行数和列数 M 和 N。
后面的M行是矩阵的数据，每一行对应与矩阵的一行(中间没有空格)。 M 和 N都不超过100，门不超过10扇。

输出描述:
路径的长度，是一-个整数


输入例子1: 
5 5
02111
01a0A
01003
01001
01111

输出例子1:
7



C++ 解法
#include<stdio.h>
#include<queue>
#include<string.h>
#include<vector>
using namespace std;
char G[105][105];
int book[105][105][1200],N,M;
int Next[4][2]={0,1,0,-1,1,0,-1,0};
int bfs(int,int);
struct node{
    int x,y,k,step;
    node(int x,int y,int k,int step):x(x),y(y),k(k),step(step){}
};
int main(){
    int i,j;
    
