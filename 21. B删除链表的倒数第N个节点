```
给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。

示例：

给定一个链表: 1->2->3->4->5, 和 n = 2.

当删除了倒数第二个节点后，链表变为 1->2->3->5.

说明：
给定的 n 保证是有效的。

进阶：
你能尝试使用一趟扫描实现吗？


```

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
 
 java
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        //双指针
        if(head == null) return null;
        ListNode pre = new ListNode(0);
        pre.next = head;
        ListNode slow = pre, fast = pre;
        int i;
        for(i = 0; i < n && fast != null; i++){
            fast = fast.next;
        }

        if(i < n) return pre.next;
        while(fast.next != null){
            fast = fast.next;
            slow = slow.next;
        }

        slow.next = slow.next.next;

        return pre.next;
    }
}







