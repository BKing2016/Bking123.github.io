····
   1959年 D.L.Shell 提出了希尔排序（缩小增量排序）
   思想：先将待排序表分割成若干形如 L[i, i+d, i+2d, ... , i+kd]的 “特殊” 子表，分别进行直接插入排序。

···


C++语言

#include <iostream>

using namespace std;


void ShellSort(int a[], int n)
{
    int i,j,gap;

    // gap为步长，每次减为原来的一半。
    for (gap = n / 2; gap > 0; gap /= 2)
    {
        // 共gap个组，对每一组都执行直接插入排序
        for (i = 0 ;i < gap; i++)
        {
            for (j = i + gap; j < n; j += gap)
            {
                // 如果a[j] < a[j-gap]，则寻找a[j]位置，并将后面数据的位置都后移。
                if (a[j] < a[j - gap])
                {
                    int tmp = a[j];
                    int k = j - gap;
                    while (k >= 0 && a[k] > tmp)
                    {
                        a[k + gap] = a[k];
                        k -= gap;
                    }
                    a[k + gap] = tmp;
                }
            }
        }

    }
}


int main()
{
    int a[] = {1,2,8,5,6,7,3};
    int len = (sizeof(a))/(sizeof(a[0]));
    for(int i = 0; i < len; i++){
        printf(" %d",a[i]);
    }
    cout << endl;

    ShellSort(a,len);
    for(int i = 0; i < len; i++){
        printf(" %d",a[i]);
    }
    return 0;
}



